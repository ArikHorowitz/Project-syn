--- a/Project-syn-main/contexts/WorkspaceContext.tsx
+++ b/Project-syn-main/contexts/WorkspaceContext.tsx
@@ -19,6 +19,7 @@
     // TOC D&D and CRUD
     updateToc: (newToc: Toc) => void;
     addPart: () => void;
+    addPartAndChapter: () => void;
     addChapter: (partId: string) => void;
     deletePart: (partId: string) => void;
     deleteChapter: (chapterId: string) => void;
@@ -324,6 +325,39 @@
     });
   }, [setWorkspace]);
 
+  const addPartAndChapter = useCallback(() => {
+    setWorkspace(draft => {
+        const now = new Date().toISOString();
+        const newChapterId = `ch-${crypto.randomUUID()}`;
+        
+        const newChapter: Chapter = {
+            id: newChapterId,
+            title: 'Untitled Chapter',
+            status: 'idea',
+            content: '<h1>Untitled Chapter</h1>',
+            updatedAt: now,
+            fragmentIds: [],
+        };
+
+        const newPart: Part = {
+            id: `part-${crypto.randomUUID()}`,
+            title: 'Untitled Part',
+            chapters: [newChapter],
+        };
+        
+        draft.toc.push(newPart);
+        draft.uiState.renamingId = newChapterId; // Set renaming focus on the new chapter
+        
+        // Also open the new chapter in the editor
+        let activeGroup = draft.uiState.tabGroups.find(g => g.id === draft.uiState.activeGroupId);
+        if (!activeGroup && draft.uiState.tabGroups.length > 0) activeGroup = draft.uiState.tabGroups[0];
+        
+        if (activeGroup) {
+            openDocumentInGroup(activeGroup, newChapterId);
+        } else { // Handle case with no groups at all
+            const newGroup: TabGroup = { id: `group-${crypto.randomUUID()}`, tabs: [newChapterId], activeTabId: newChapterId };
+            draft.uiState.tabGroups.push(newGroup);
+            draft.uiState.activeGroupId = newGroup.id;
+        }
+    });
+  }, [setWorkspace]);
+
   const addChapter = useCallback((partId: string) => {
     setWorkspace(draft => {
       const part = draft.toc.find(p => p.id === partId);
@@ -339,6 +373,7 @@
         };
         part.chapters.push(newChapter);
         draft.uiState.renamingId = newChapter.id;
+        openDocument(newChapter.id);
       }
     });
   }, [setWorkspace]);
@@ -467,7 +502,7 @@
 
 
   const actions = { 
-      openChapter, openFragment, setActiveTab, closeTab, updateChapterContent, updateFragmentContent, addFragment, deleteFragment, updateFragmentMetadata, toggleBottomPanel, toggleInspector, toggleCommandPalette, linkFragmentToChapter, unlinkFragmentFromChapter, updateToc, addPart, addChapter, deletePart, deleteChapter, updateItemName, setRenamingId, splitEditor, unsplitEditor, setSplitDirection, setActiveGroup, setSidebarView, toggleSettings, updateSettings, updateChapterStatus, replaceWorkspace, createSnapshot, restoreSnapshot, deleteSnapshot, toggleFragmentTagFilter, clearFragmentTagFilters
+      openChapter, openFragment, setActiveTab, closeTab, updateChapterContent, updateFragmentContent, addFragment, deleteFragment, updateFragmentMetadata, toggleBottomPanel, toggleInspector, toggleCommandPalette, linkFragmentToChapter, unlinkFragmentFromChapter, updateToc, addPart, addPartAndChapter, addChapter, deletePart, deleteChapter, updateItemName, setRenamingId, splitEditor, unsplitEditor, setSplitDirection, setActiveGroup, setSidebarView, toggleSettings, updateSettings, updateChapterStatus, replaceWorkspace, createSnapshot, restoreSnapshot, deleteSnapshot, toggleFragmentTagFilter, clearFragmentTagFilters
   };
 
   return (
--- a/Project-syn-main/components/workbench/WelcomeScreen.tsx
+++ b/Project-syn-main/components/workbench/WelcomeScreen.tsx
@@ -34,12 +34,12 @@
 
     const handleNewChapter = () => {
         const firstPartId = workspace?.toc[0]?.id;
+        // If any part exists, add a chapter to the first one.
         if (firstPartId) {
             actions.addChapter(firstPartId);
         } else {
-            actions.addPart();
-            // Note: This won't add a chapter immediately as the new part ID is not available sync.
-            // A more robust solution might involve a callback or effect. For now, this is a good start.
+            // If no parts exist, create a new part *and* a chapter within it atomically.
+            actions.addPartAndChapter();
         }
     };
     